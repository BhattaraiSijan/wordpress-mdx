import { CSSProperties, ElementType, ReactNode } from "react";
type Direction = "horizontal" | "vertical";
export type PanelGroupStorage = {
    getItem(name: string): string | null;
    setItem(name: string, value: string): void;
};
type PanelGroupOnLayout = (sizes: number[]) => void;
type PanelOnCollapse = (collapsed: boolean) => void;
type PanelOnResize = (size: number) => void;
type PanelResizeHandleOnDragging = (isDragging: boolean) => void;
export type PanelProps = {
    children?: ReactNode;
    className?: string;
    collapsible?: boolean;
    defaultSize?: number | null;
    id?: string | null;
    maxSize?: number;
    minSize?: number;
    onCollapse?: PanelOnCollapse | null;
    onResize?: PanelOnResize | null;
    order?: number | null;
    style?: CSSProperties;
    tagName?: ElementType;
};
export type ImperativePanelHandle = {
    collapse: () => void;
    expand: () => void;
    getCollapsed(): boolean;
    getSize(): number;
    resize: (percentage: number) => void;
};
export const Panel: import("react").ForwardRefExoticComponent<PanelProps & import("react").RefAttributes<ImperativePanelHandle>>;
export type PanelGroupProps = {
    autoSaveId?: string;
    children?: ReactNode;
    className?: string;
    direction: Direction;
    disablePointerEventsDuringResize?: boolean;
    id?: string | null;
    onLayout?: PanelGroupOnLayout;
    storage?: PanelGroupStorage;
    style?: CSSProperties;
    tagName?: ElementType;
};
export type ImperativePanelGroupHandle = {
    getLayout: () => number[];
    setLayout: (panelSizes: number[]) => void;
};
export const PanelGroup: import("react").ForwardRefExoticComponent<PanelGroupProps & import("react").RefAttributes<ImperativePanelGroupHandle>>;
export type PanelResizeHandleProps = {
    children?: ReactNode;
    className?: string;
    disabled?: boolean;
    id?: string | null;
    onDragging?: PanelResizeHandleOnDragging;
    style?: CSSProperties;
    tagName?: ElementType;
};
export function PanelResizeHandle({ children, className: classNameFromProps, disabled, id: idFromProps, onDragging, style: styleFromProps, tagName: Type, }: PanelResizeHandleProps): import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;

//# sourceMappingURL=react-resizable-panels.d.ts.map
