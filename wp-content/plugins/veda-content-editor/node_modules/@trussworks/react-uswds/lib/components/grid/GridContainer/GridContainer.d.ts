import { default as React, JSX } from 'react';
import { ContainerSizes } from '../types';
type GridContainerProps<T> = {
    containerSize?: ContainerSizes;
    className?: string;
    children: React.ReactNode;
} & T;
interface WithCustomGridContainerProps<T> {
    asCustom: React.FunctionComponent<T>;
}
export type DefaultGridContainerProps = GridContainerProps<JSX.IntrinsicElements['div']>;
export type CustomGridContainerProps<T> = GridContainerProps<T> & WithCustomGridContainerProps<T>;
export declare function isCustomProps<T>(props: DefaultGridContainerProps | CustomGridContainerProps<T>): props is CustomGridContainerProps<T>;
export declare function GridContainer(props: DefaultGridContainerProps): JSX.Element;
export declare function GridContainer<T>(props: CustomGridContainerProps<T>): JSX.Element;
export {};
